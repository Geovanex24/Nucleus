:root {
  --primario: #6834a6;
  --blanco: #fff;
  --negro: #000000;
  --fuentePrincipal: "Poppins", sans-serif;
}
html {
  font-size: 62.5%;
  box-sizing: border-box;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}

/** ---Globales---  */
body {
  font-family: var(--fuentePrincipal);
  font-size: 1.6rem;
  line-height: 1.8;
}
h1,
h2,
h3 {
  font-weight: 900;
  margin: 2rem 0;
}
h1 {
  font-size: 5rem;
}
h2 {
  font-size: 4.6rem;
}
h3 {
  font-size: 3rem;
}
a {
  text-decoration: none;
}
img {
  max-width: 100%;
  display: block;
}
[class$="__contenedor"] {
  max-width: 120rem;
  margin: 0 auto;
  width: 90%;
}

[class$="__heading"] {
  text-align: center;
  margin-bottom: 5rem;
}

/** ---Componentes--- */

/* -- Componente - Listado --*/
.listado {
}
.listado__elemento {
  background-color: var(--blanco);
  box-shadow: 0px 0px 15px 3px rgb(0 0 0 / 0.15);
  padding: 2rem;
  margin-bottom: 5rem;
  transition: transform 0.3s;
}
.listado__elemento:hover {
  /* 
    1 es el numero de referencia 
    Menor a 1: pequeño
    Mayor a 1: grande
  */
  transform: scale(1.1);
}
@media (min-width: 768px) {
  .listado__elemento--2col {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
  }
}
.listado__heading {
  font-size: 3rem;
  color: var(--primario);
  margin: 0;
}
.listado__numero {
  font-size: 6rem;
  margin: 0;
  font-weight: 900;
  color: var(--primario);
  text-align: center;
}
@media (min-width: 768px) {
  .listado__numero {
    flex-basis: 20rem;
    text-align: right;
    font-size: 4rem;
  }
}
.listado__texto {
  margin: 0;
  font-size: 2rem;
}

/* -- Header --*/
.header {
  background-image: url(../img/header_bg.svg);
  background-repeat: no-repeat;
  background-position: top right;
  background-size: 10rem;
  padding: 5rem 0;
}
@media (min-width: 768px) {
  .header {
    background-size: 50rem;
  }
}
@media (min-width: 992px) {
  .header {
    background-size: 60rem;
  }
}
@media (min-width: 1280px) {
  .header {
    background-size: 110rem;
  }
}
@media (min-width: 768px) {
  .header__barra {
    display: flex;
    justify-content: space-between;
  }
}
.header__logo {
  width: 15rem;
  margin: 0 auto 3rem auto;
}
@media (min-width: 768px) {
  .header__logo {
    margin: 0;
  }
  /* Todo: crear selector de atributo, para evitar repetir este código de grid */
  .header__grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    align-items: center;
    gap: 4rem;
  }
}

.header__heading {
  font-size: 2rem;
}
@media (min-width: 768px) {
  .header__heading {
    text-align: left;
    font-size: 5rem;
    line-height: 1.2;
  }
}

.header__boton {
  background-color: var(--primario);
  display: block;
  padding: 1rem;
  text-align: center;
  color: var(--blanco);
  margin-bottom: 4rem;
}

@media (min-width: 768px) {
  .header__boton {
    padding: 1rem 3rem;
    display: inline-block;
  }
}

@media (min-width: 768px) {
  .header__imagen {
    max-width: 30rem;
    margin: 0 auto;
  }
}

/* -- Navegacion --*/
.navegacion {
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media (min-width: 768px) {
  .navegacion {
    flex-direction: row;
    align-items: flex-start;
    gap: 2rem;
  }
}
.navegacion__link {
  color: var(--primario);
}
@media (min-width: 768px) {
  .navegacion__link {
    color: var(--blanco);
  }
}
.navegacion__link--blanco {
  color: var(--blanco);
}
/* -- Sección - Nucleus --*/
.nucleus {
  margin-top: 3rem;
}
.nucleus__grid {
  display: flex;
  flex-direction: column-reverse;
}
@media (min-width: 768px) {
  /* Todo: crear selector de atributo, para evitar repetir este código de grid */
  .nucleus__grid {
    display: grid;
    grid-template-columns: 1fr 2fr;
    column-gap: 5rem;
    align-items: center;
  }
}

/* -- Sección - Seguridad --*/

/* 
    Métodos para realizar background con diagonales

    - SVG
    - Seudo elementos :before y :after - position absolute y relative
    - Rotate (Anteriormente)

    En CSS, para que los pseudo-elementos "::before" y "::after" se muestren correctamente, 
    es importante establecer su propiedad "display" como "block" o "inline-block". 
    Esto es independiente de si se define una altura ("height") y un ancho ("width") para esos pseudo-elementos.

    Sin embargo, en esta ocasión se utilizará 'position: relative' y 'position: absolute' en lugar de 'display: block' o 'display: inline-block'. 
    Estas propiedades no requieren de dicho display.

    ¿Cómo funciona la posiciton relativa y absoluta?

    Siempre debes tener un elemento que actúe como guía o referencia. En este caso, ese elemento será el bloque de seguridad. 
    Este elemento sobre el cual posicionarás otros elementos debe tener la propiedad 'position: relative'."
    Gracias a esto, todos los elementos hijos dentro de este bloque guía pueden ser posicionados. 
    A diferencia de grid o flexbox, cualquier elemento de primer, segundo o tercer nivel de descendencia puede ser posicionado, 
    tomando como referencia el bloque guía.

    A continuación, se debe aplicar la propiedad 'position: absolute' a uno de los hijos que deseamos posicionar. 
    En otras palabras, siempre debe haber un elemento con 'position: relative' y otro con 'position: absolute'.

    "Si asignas la propiedad position: absolute a un elemento que no sea un hijo directo del elemento con position: relative, entonces el posicionamiento absoluto no se basará en el elemento padre con posición relativa. 
    En su lugar, se tomará como referencia el ancestro más cercano que tenga una posición distinta de static (por defecto) establecida, o en última instancia, el <body> como parte del elemento raíz del documento.

    En resumen, es importante considerar que el contexto de posicionamiento para position: absolute se determina por la jerarquía de elementos con posición relativa, y si no se encuentra ninguno,
    se recurre al <body> como un posible punto de referencia para el posicionamiento absoluto."

    Valores para posicionar:

    - top
    - left
    - bottom
    - right

    No es posible ubicar un elemento en dos ubicaciones al mismo tiempo, por ejemplo, arriba y abajo, según las propiedades de CSS. 
    Lo mismo pasa con left y right

 */
.seguridad {
  background-color: var(--primario);
  padding: 20rem 0;
  position: relative;
  margin: 10rem 0;
  overflow: hidden;
}
.seguridad::before,
.seguridad::after {
  background-color: var(--blanco);
  content: "";
  height: 20rem;
  width: 120%;
  position: absolute;
}
.seguridad::before {
  top: -10rem;
  left: 0;
  transform: rotate(3deg);
}
.seguridad::after {
  bottom: -10rem;
  left: 0;
  transform: rotate(3deg);
}
.seguridad__heading {
  color: var(--blanco);
}
@media (min-width: 768px) {
  /* Todo: crear selector de atributo, para evitar repetir este código de grid */
  .seguridad__grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 5rem;
    align-items: center;
  }
}
/* -- Sección - Comisiones --*/
/* Todo: crear selector de atributo, para evitar repetir este código de grid */
@media (min-width: 768px) {
  .comisiones__grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 5rem;
    align-items: end;
  }
}
@media (min-width: 992px) {
  .comisiones__grid {
    align-items: center;
  }
}
.comisiones__texto {
  text-align: center;
  font-size: 2.4rem;
  font-weight: 700;
}
@media (min-width: 768px) {
  .comisiones__texto {
    text-align: left;
  }
}

/* -- Sección - Testimoniales --*/
.testimoniales {
  background-color: var(--primario);
  padding: 5rem 0;
}
.testimoniales__heading {
  color: var(--blanco);
}

.testimoniales__grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 4rem;
}
@media (min-width: 768px) {
  .testimoniales__grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
.testimonial {
  box-shadow: 0px 0px 15px 3px rgb(0 0 0 / 0.15);
  background-color: var(--blanco);
  padding: 2rem;
  position: relative;
}
.testimonial__texto {
  padding-left: 4rem;
}
.testimonial__texto::before {
  content: "";
  background-image: url(../img/comilla.png);
  background-size: 3rem;
  background-repeat: no-repeat;
  background-position: center;
  height: 3rem;
  width: 3rem;
  position: absolute;
  top: 3.5rem;
  left: 2rem;
}
.testimonial__autor {
  color: var(--primario);
  font-weight: 700;
  text-align: right;
}

/* -- Footer --*/
.footer {
  background-color: #5a30a0;
  padding: 3rem 0;
}
@media (min-width: 768px) {
  .footer__grid {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}
.footer__logo {
  width: 20rem;
  margin: 0 auto 4rem auto;
}
@media (min-width: 768px) {
  .footer__logo {
    margin: 0;
  }
}

/* Con este proyecto, se pueden ver las ventajas de BEM 

  - Permite tener un código más ordenado
  - Se puede ver como se agrupa todo lo relacionado al header, los elementos, los modificadores...
  - Se evita repetir código y mucho más
 */
